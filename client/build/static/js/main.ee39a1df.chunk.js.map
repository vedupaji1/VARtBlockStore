{"version":3,"sources":["Components/Error404.jsx","Components/Dashboard/Dashboard.jsx","Components/Loading.jsx","Components/Header/UploadFile.jsx","Components/MainDashboardComponent.jsx","Logo.svg","Components/Header/Header.jsx","App.js","Redux/Reducers/users.js","Redux/Reducers/tempStates.js","Redux/store.js","index.js"],"names":["Error404","className","Dashboard","usersData","isMainUser","usersData_PRIVATE","useSelector","state","data","usersData_PUBLIC","tempCounter_PRIVATE","useRef","tempCounter_PUBLIC","folderNames_PRIVATE","folderNames_PUBLIC","shouldShowData","dispatch","useDispatch","changeAccountVisibility","isPrivate","a","window","confirm","type","payload","fetch","method","headers","body","JSON","stringify","resData","json","isDone","alert","location","reload","isFile","filePath","split","length","current","indexOf","push","changeCurrentFolder","folderName","tempMainData","tempData","i","Object","assign","path","changeCurPath","pos","splice","getFileIndex","dataFile","Promise","res","rej","shareFileLink","fileIndex","navigator","clipboard","writeText","link","changeFileVisibility","console","log","index","deleteFile","getProperDate","unfilteredDate","months","tempDate","Date","curDate","getFullYear","getDate","getMonth","getHours","getMinutes","undefined","src","profileImage","alt","username","email","style","backgroundColor","onClick","color","href","map","height","viewBox","version","width","fill","fillRule","d","margin","time","marginTop","Loading","client","ipfsHttpClient","UploadFile","fileUploadStatus","pushDataOnDatabase","dataToSend","fileData","message","storeData","document","getElementById","value","querySelector","files","isFolder","add","result","mainData","webkitRelativePath","getTime","name","paddingLeft","htmlFor","onChange","e","getElementsByClassName","innerText","visibility","id","placeholder","webkitdirectory","multiple","display","checked","MainDashboardComponent","useParams","mainUserData","searchedUserData","is404","usernameParameter","isLoading","isFileUpload","useEffect","init","userData","privateFiles","publicFiles","Header","history","useHistory","searchUser","userEmail","trim","substr","checkIsEnter","key","innerWidth","marginLeft","Logo","onKeyDown","role","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","x2","y1","y2","to","App","exact","pathname","createReducer","setMainUserData","action","setSearchedUserData","setIs404","setUsernameParameter","setIsLoading","setUsersData_PRIVATE","setUsersData_PUBLIC","setIsFileUpload","setIsPrivateFile","setIsFolder","store","configureStore","reducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.ee39a1df.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <>\r\n            <div className=\"div1\">\r\n                <div className=\"subMainDivError404\">\r\n                    <div className=\"div2\">\r\n                        <div className=\"op40 err1\">\r\n                            <h1>4</h1>\r\n                        </div>\r\n                        <div className=\"op41 err1\">\r\n                            <h1>0</h1>\r\n                        </div>\r\n                        <div className=\"op42 err1\">\r\n                            <h1>4</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"message1\">\r\n                        <h1>Something Went Wrong</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FiMoreVertical } from \"react-icons/fi\";\r\n\r\nconst Dashboard = ({ usersData, isMainUser }) => {\r\n    let usersData_PRIVATE = useSelector((state) => state.usersData_PRIVATE.data);\r\n    let usersData_PUBLIC = useSelector((state) => state.usersData_PUBLIC.data);\r\n    let tempCounter_PRIVATE = useRef(0);\r\n    let tempCounter_PUBLIC = useRef(0);\r\n    let folderNames_PRIVATE = [];\r\n    let folderNames_PUBLIC = [];\r\n    let shouldShowData = false;\r\n    const dispatch = useDispatch();\r\n\r\n    const changeAccountVisibility = async (isPrivate) => {\r\n        if (window.confirm(\"Are You Sure, Your Account's Visibility Will Change\") === true) {\r\n            dispatch({ type: \"setIsLoading\", payload: true });\r\n            let resData = await fetch(\"/setAccountVisibility\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ isPrivate: isPrivate })\r\n            })\r\n            let data = await resData.json();\r\n            if (data.isDone === true) {\r\n                alert(\"Visibility Of Account Is Changed\");\r\n            } else {\r\n                alert(\"Something Went Wrong\");\r\n            }\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const isFile = (filePath, isPrivate) => {\r\n        shouldShowData = false;\r\n        if (isPrivate === true) {\r\n            if (filePath.split(\"/\").length - 1 > tempCounter_PRIVATE.current) {\r\n                if (folderNames_PRIVATE.indexOf(filePath.split(\"/\")[tempCounter_PRIVATE.current]) === -1) {\r\n                    folderNames_PRIVATE.push(filePath.split(\"/\")[tempCounter_PRIVATE.current])\r\n                    shouldShowData = true;\r\n                }\r\n                return false;\r\n            } else {\r\n                shouldShowData = true;\r\n                return true;\r\n            }\r\n        } else {\r\n            shouldShowData = false;\r\n            if (filePath.split(\"/\").length - 1 > tempCounter_PUBLIC.current) {\r\n                if (folderNames_PUBLIC.indexOf(filePath.split(\"/\")[tempCounter_PUBLIC.current]) === -1) {\r\n                    folderNames_PUBLIC.push(filePath.split(\"/\")[tempCounter_PUBLIC.current])\r\n                    shouldShowData = true;\r\n                }\r\n                return false;\r\n            } else {\r\n                shouldShowData = true;\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeCurrentFolder = (folderName, isPrivate) => {\r\n        let tempData = [];\r\n        let tempMainData;\r\n        if (isPrivate === true) {\r\n            for (let i = 0; i < usersData_PRIVATE[tempCounter_PRIVATE.current].data.length; i++) {\r\n                if (usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath.split(\"/\")[tempCounter_PRIVATE.current] === folderName) {\r\n                    tempData.push((usersData_PRIVATE[tempCounter_PRIVATE.current].data[i]))\r\n                }\r\n            }\r\n            tempMainData = usersData_PRIVATE;\r\n            tempMainData = Object.assign([], tempMainData);\r\n            tempMainData.push({ path: \"/\" + folderName, data: tempData })\r\n            tempCounter_PRIVATE.current += 1\r\n            dispatch({ type: \"setUsersData_PRIVATE\", payload: tempMainData });\r\n        } else {\r\n            for (let i = 0; i < usersData_PUBLIC[tempCounter_PUBLIC.current].data.length; i++) {\r\n                if (usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath.split(\"/\")[tempCounter_PUBLIC.current] === folderName) {\r\n                    tempData.push((usersData_PUBLIC[tempCounter_PUBLIC.current].data[i]))\r\n                }\r\n            }\r\n            tempMainData = usersData_PUBLIC;\r\n            tempMainData = Object.assign([], tempMainData);\r\n            tempMainData.push({ path: \"/\" + folderName, data: tempData })\r\n            tempCounter_PUBLIC.current += 1\r\n            dispatch({ type: \"setUsersData_PUBLIC\", payload: tempMainData });\r\n        }\r\n    }\r\n\r\n    const changeCurPath = (pos, isPrivate) => {\r\n        if (isPrivate === true) {\r\n            tempCounter_PRIVATE.current = pos;\r\n            let tempMainData = usersData_PRIVATE;\r\n            tempMainData = Object.assign([], tempMainData);\r\n            tempMainData = tempMainData.splice(0, tempCounter_PRIVATE.current + 1)\r\n            dispatch({ type: \"setUsersData_PRIVATE\", payload: tempMainData });\r\n        } else {\r\n            tempCounter_PUBLIC.current = pos;\r\n            let tempMainData = usersData_PUBLIC;\r\n            tempMainData = Object.assign([], tempMainData);\r\n            tempMainData = tempMainData.splice(0, tempCounter_PUBLIC.current + 1)\r\n            dispatch({ type: \"setUsersData_PUBLIC\", payload: tempMainData });\r\n        }\r\n    }\r\n\r\n    const getFileIndex = (filePath, dataFile) => {\r\n        return new Promise((res, rej) => {\r\n            for (let i = 0; i < dataFile.length; i++) {\r\n                if (filePath === dataFile[i].filePath) {\r\n                    res(i);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const shareFileLink = async (filePath, isPrivate) => {\r\n        let fileIndex;\r\n        if (isPrivate === true) {\r\n            fileIndex = await getFileIndex(filePath, usersData_PRIVATE[0].data);\r\n            await navigator.clipboard.writeText(usersData_PRIVATE[0].data[fileIndex].link);\r\n        } else {\r\n            fileIndex = await getFileIndex(filePath, usersData_PUBLIC[0].data);\r\n            await navigator.clipboard.writeText(usersData_PUBLIC[0].data[fileIndex].link);\r\n        }\r\n        alert(\"Link Is Copied To Your Clipboard\");\r\n    }\r\n\r\n    const changeFileVisibility = async (filePath, isPrivate) => {\r\n        if (window.confirm(\"Are You Sure, Your File's Visibility Will Change\") === true) {\r\n            let fileIndex;\r\n            if (isPrivate !== true) {\r\n                fileIndex = await getFileIndex(filePath, usersData_PRIVATE[0].data);\r\n            } else {\r\n                fileIndex = await getFileIndex(filePath, usersData_PUBLIC[0].data);\r\n            }\r\n            console.log(fileIndex)\r\n            dispatch({ type: \"setIsLoading\", payload: true });\r\n            let resData = await fetch(\"/setFileVisibility\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ isPrivate: isPrivate, index: fileIndex })\r\n            })\r\n            let data = await resData.json();\r\n            if (data.isDone === true) {\r\n                alert(\"Visibility Of File Is Changed\");\r\n            } else {\r\n                alert(\"Something Went Wrong\");\r\n            }\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const deleteFile = async (filePath, isPrivate) => {\r\n        if (window.confirm(\"Are You Sure, Your File Will Deleted\") === true) {\r\n            let fileIndex;\r\n            if (isPrivate === true) {\r\n                fileIndex = await getFileIndex(filePath, usersData_PRIVATE[0].data);\r\n            } else {\r\n                fileIndex = await getFileIndex(filePath, usersData_PUBLIC[0].data);\r\n            }\r\n            console.log(fileIndex)\r\n            dispatch({ type: \"setIsLoading\", payload: true });\r\n            let resData = await fetch(\"/deleteFileData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ isPrivate: isPrivate, index: fileIndex })\r\n            })\r\n            let data = await resData.json();\r\n            if (data.isDone === true) {\r\n                alert(\"Your File Is Deleted\");\r\n            } else {\r\n                alert(\"Something Went Wrong\");\r\n            }\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const getProperDate = (unfilteredDate) => {\r\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        let tempDate = new Date(unfilteredDate);\r\n        let curDate = new Date();\r\n        if (curDate.getFullYear() > tempDate.getFullYear()) {\r\n            return tempDate.getDate() + months[tempDate.getMonth()] + \" \" + tempDate.getFullYear();\r\n        } else if (curDate.getMonth() > tempDate.getMonth() || curDate.getDate() > tempDate.getDate()) {\r\n            return tempDate.getDate() + \" \" + months[tempDate.getMonth()];\r\n        } else {\r\n            return tempDate.getHours() + \":\" + tempDate.getMinutes();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                usersData === undefined || usersData === null || usersData.isDone === false ? <></>\r\n                    : usersData_PRIVATE === null && usersData_PUBLIC === null ? <></>\r\n                        : <>\r\n                            <div className=\"mainDashboardComponent\">\r\n                                <div className=\"subDashboardComponent\">\r\n                                    <div className=\"profileShowerComponent\">\r\n                                        <div className=\"profileImage\">\r\n                                            <img src={usersData.data.profileImage} alt=\"profileImage\" />\r\n                                        </div>\r\n                                        <div className=\"usersDetails\">\r\n                                            <h1 className=\"usernameData\">{usersData.data.username}</h1>\r\n                                            <p className=\"userEmailData\">{usersData.data.email}</p>\r\n                                            {\r\n                                                usersData.data.isPrivate === true ? <p className=\"accountVisibilityShower\"><span className=\"circleShape\" style={{ backgroundColor: \"red\" }}></span> Private</p>\r\n                                                    : <p className=\"accountVisibilityShower\"><span className=\"circleShape\" style={{ backgroundColor: \"green\" }}></span> Public</p>\r\n                                            }\r\n\r\n                                            {\r\n                                                isMainUser === true ?\r\n                                                    usersData.data.isPrivate === true ? <>\r\n                                                        <div onClick={() => changeAccountVisibility(false)} className=\"visibilityChanger\" style={{ color: \"green\" }}>Public</div>\r\n                                                        <div onClick={() => {\r\n                                                            window.location.href = \"/auth/google\";\r\n                                                        }} className=\"switchAccountShower\">Switch Account</div>\r\n                                                    </>\r\n                                                        : <>\r\n                                                            <div onClick={() => changeAccountVisibility(true)} className=\"visibilityChanger\" style={{ color: \"#cf222e\" }}>Private</div>\r\n                                                            <div onClick={() => {\r\n                                                               window.location.href = \"/auth/google\";\r\n                                                            }} className=\"switchAccountShower\">Switch Account</div>\r\n                                                        </>\r\n                                                    : <></>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"fileShowerComponent\">\r\n                                        {\r\n                                            isMainUser === true ?\r\n                                                <div className=\"privateFileShower\">\r\n                                                    <div className=\"fileShowerHeading\">\r\n                                                        <span className=\"circleShape\" style={{ backgroundColor: \"red\" }}></span>\r\n                                                        <h1>Private</h1>\r\n                                                        <div className=\"pathShower\">\r\n                                                            {\r\n                                                                usersData_PRIVATE[0].data.length > 0 ?\r\n                                                                    usersData_PRIVATE.map((data, i) => (\r\n                                                                        <span key={i} onClick={() => changeCurPath(i, true)}>{usersData_PRIVATE[i].path}</span>\r\n                                                                    )) : <>No Files</>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {\r\n                                                        usersData_PRIVATE[tempCounter_PRIVATE.current].data.map((data, i) => (\r\n                                                            isFile(usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath, true) === true ?\r\n                                                                shouldShowData === true ?\r\n                                                                    <div key={i} className=\"fileShowerDiv\">\r\n                                                                        <svg style={{ color: \"#57606a\" }} aria-label=\"File\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" className=\"fileSVG\">\r\n                                                                            <path fill=\"#57606a\" fillRule=\"evenodd\" d=\"M3.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25V6H9.75A1.75 1.75 0 018 4.25V1.5H3.75zm5.75.56v2.19c0 .138.112.25.25.25h2.19L9.5 2.06zM2 1.75C2 .784 2.784 0 3.75 0h5.086c.464 0 .909.184 1.237.513l3.414 3.414c.329.328.513.773.513 1.237v8.086A1.75 1.75 0 0112.25 15h-8.5A1.75 1.75 0 012 13.25V1.75z\"></path>\r\n                                                                        </svg>\r\n                                                                        <p onClick={() => {\r\n                                                                            window.location.href = data.link\r\n                                                                        }}>{(usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath).split(\"/\")[tempCounter_PRIVATE.current]}</p>\r\n                                                                        <span style={{ margin: \"0rem 0.5rem\" }}>{(getProperDate(data.time))}</span>\r\n                                                                        <>\r\n                                                                            <div className=\"showMoreDiv\">\r\n                                                                                <details>\r\n                                                                                    <summary>\r\n                                                                                        <FiMoreVertical />\r\n                                                                                    </summary>\r\n                                                                                    <div className=\"showMoreOptionList\">\r\n                                                                                        <div onClick={() => shareFileLink(usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath, true)} className=\"shareFileOption showMoreOptions\">Share</div>\r\n                                                                                        <div onClick={() => changeFileVisibility(usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath, false)} className=\"changeVisibilityOption showMoreOptions\">Public</div>\r\n                                                                                        <div onClick={() => deleteFile(usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath, true)} className=\"deleteFile showMoreOptions\">Delete</div>\r\n                                                                                    </div>\r\n                                                                                </details>\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    </div> : null\r\n                                                                : shouldShowData === true ?\r\n                                                                    <div key={i} className=\"fileShowerDiv\">\r\n                                                                        <svg style={{ color: \"#54aeff\" }} aria-label=\"Directory\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" className=\"folderSVG\">\r\n                                                                            <path fill=\"#54aeff\" d=\"M1.75 1A1.75 1.75 0 000 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25v-8.5A1.75 1.75 0 0014.25 3H7.5a.25.25 0 01-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75z\"></path>\r\n                                                                        </svg>\r\n                                                                        <p onClick={() => changeCurrentFolder((usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath).split(\"/\")[tempCounter_PRIVATE.current], true)}>{(usersData_PRIVATE[tempCounter_PRIVATE.current].data[i].filePath).split(\"/\")[tempCounter_PRIVATE.current]}</p>\r\n                                                                    </div> : null\r\n                                                        ))\r\n\r\n                                                    }\r\n                                                </div> : <></>\r\n                                        }\r\n\r\n                                        <div className=\"publicFileShower\" style={{ marginTop: \"5rem\" }}>\r\n                                            <div className=\"fileShowerHeading\">\r\n                                                <span className=\"circleShape\" style={{ backgroundColor: \"green\" }}></span>\r\n                                                <h1>Public</h1>\r\n                                                <div className=\"pathShower\">\r\n                                                    {\r\n                                                        usersData_PUBLIC[0].data.length > 0 ?\r\n                                                            usersData_PUBLIC.map((data, i) => (\r\n                                                                <span key={i} onClick={() => changeCurPath(i, false)}>{usersData_PUBLIC[i].path}</span>\r\n                                                            )) : <><>No Files</></>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                usersData_PUBLIC[tempCounter_PUBLIC.current].data.map((data, i) => (\r\n                                                    isFile(usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath, false) === true ?\r\n                                                        shouldShowData === true ?\r\n                                                            <div key={i} className=\"fileShowerDiv\">\r\n                                                                <svg style={{ color: \"#57606a\" }} aria-label=\"File\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" className=\"fileSVG\">\r\n                                                                    <path fill=\"#57606a\" fillRule=\"evenodd\" d=\"M3.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25V6H9.75A1.75 1.75 0 018 4.25V1.5H3.75zm5.75.56v2.19c0 .138.112.25.25.25h2.19L9.5 2.06zM2 1.75C2 .784 2.784 0 3.75 0h5.086c.464 0 .909.184 1.237.513l3.414 3.414c.329.328.513.773.513 1.237v8.086A1.75 1.75 0 0112.25 15h-8.5A1.75 1.75 0 012 13.25V1.75z\"></path>\r\n                                                                </svg>\r\n                                                                <p onClick={() => {\r\n                                                                    window.location.href = data.link\r\n                                                                }}>{(usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath).split(\"/\")[tempCounter_PUBLIC.current]}</p>\r\n                                                                <span style={{ margin: \"0rem 0.5rem\" }}>{(getProperDate(data.time))}</span>\r\n                                                                <div className=\"showMoreDiv\">\r\n                                                                    <details>\r\n                                                                        <summary>\r\n                                                                            <FiMoreVertical />\r\n                                                                        </summary>\r\n                                                                        <div className=\"showMoreOptionList\">\r\n                                                                            <div onClick={() => shareFileLink(usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath, false)} className=\"shareFileOption showMoreOptions\">Share</div>\r\n                                                                            {\r\n                                                                                isMainUser === true ? <>\r\n                                                                                    <div onClick={() => changeFileVisibility(usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath, true)} className=\"changeVisibilityOption showMoreOptions\">Private</div>\r\n                                                                                    <div onClick={() => deleteFile(usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath, false)} className=\"deleteFile showMoreOptions\">Delete</div>\r\n                                                                                </> : <></>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </details>\r\n                                                                </div>\r\n                                                            </div> : null\r\n                                                        : shouldShowData === true ?\r\n                                                            <div key={i} className=\"fileShowerDiv\">\r\n                                                                <svg style={{ color: \"#54aeff\" }} aria-label=\"Directory\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" className=\"folderSVG\">\r\n                                                                    <path fill=\"#54aeff\" d=\"M1.75 1A1.75 1.75 0 000 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25v-8.5A1.75 1.75 0 0014.25 3H7.5a.25.25 0 01-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75z\"></path>\r\n                                                                </svg>\r\n                                                                <p onClick={() => changeCurrentFolder((usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath).split(\"/\")[tempCounter_PUBLIC.current], false)}>{(usersData_PUBLIC[tempCounter_PUBLIC.current].data[i].filePath).split(\"/\")[tempCounter_PUBLIC.current]}</p>\r\n                                                            </div> : null\r\n                                                ))\r\n\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard; ","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"mainLoader\">\r\n                <div className=\"subLoader\">\r\n                    <div className=\"loaderText\">V</div>\r\n                </div>\r\n                <div className=\"animatorDiv\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { create as ipfsHttpClient } from 'ipfs-http-client' // This Line Of Code Is Taken From \"https://github.com/dappuniversity/nft_marketplace/blob/main/src/frontend/components/Create.js\", Basically Web3.Storage Was Not Working With ReactJs Because Of This We Are Using IPFS-Client.\r\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\nconst UploadFile = () => {\r\n    const dispatch = useDispatch();\r\n    const fileUploadStatus = useSelector((state) => state.fileUploadStatus);\r\n\r\n    const pushDataOnDatabase = (dataToSend) => {\r\n        return new Promise(async (res, rej) => {\r\n            let resData = await fetch(\"/storeFileData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ fileData: dataToSend })\r\n            })\r\n            let data = await resData.json();\r\n            if (data.isDone === true) {\r\n                alert(\"Your File Is Uploaded\");\r\n            } else {\r\n                alert(data.message);\r\n            }\r\n            window.location.reload();\r\n            res(true);\r\n        })\r\n    }\r\n\r\n    const storeData = async () => {\r\n        try {\r\n            if (document.getElementById(\"getFileInp\").value !== \"\" && document.getElementById(\"getFileInp\").value !== \" \") {\r\n                if (window.confirm(\"Are You Sure, Your File Will Store On IPFS\") === true) {\r\n                    dispatch({ type: \"setIsLoading\", payload: true });\r\n                    let time = new Date();\r\n                    let filePath = document.querySelector('input[type=\"file\"]').files;\r\n                    if (fileUploadStatus.isFolder === true) {\r\n                        let dataToSend = [];\r\n                        for (let i = 0; i < filePath.length; i++) {\r\n                            const result = await client.add(filePath[0])\r\n                            let mainData = \"https://ipfs.io/ipfs/\" + result.path;\r\n                            console.log(mainData);\r\n                            dataToSend.push({ filePath: filePath[i].webkitRelativePath, link: mainData, isPrivate: fileUploadStatus.isPrivate, time: time.getTime() })\r\n                        }\r\n                        await pushDataOnDatabase(dataToSend)\r\n                    } else {\r\n                        const result = await client.add(filePath[0])\r\n                        let mainData = \"https://ipfs.io/ipfs/\" + result.path;\r\n                        console.log(mainData);\r\n                        await pushDataOnDatabase([{ filePath: filePath[0].name, link: mainData, isPrivate: fileUploadStatus.isPrivate, time: time.getTime() }])\r\n                    }\r\n                }\r\n            } else {\r\n                alert(\"Please Choose File\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Something Went Wrong\");\r\n            //window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"uploadImageMain\">\r\n                <div className=\"uploadImageSub\">\r\n                    <div className=\"closeUploadIcon\">\r\n                        <i onClick={() => {\r\n                            dispatch({ type: \"setIsFileUpload\", payload: false })\r\n                        }} className=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"uploadImageSubPart\">\r\n                        <h1 className=\"fileNameShower\" style={{ paddingLeft: \"2rem\" }}> </h1>\r\n                        <label htmlFor=\"getFileInp\" className=\"getFile\">Select <i className=\"fa fa-file-image-o\" aria-hidden=\"true\"></i></label>\r\n                        {\r\n                            fileUploadStatus.isFolder === true ?\r\n                                <input onChange={(e) => {\r\n                                    document.getElementsByClassName(\"fileNameShower\")[0].innerText = document.querySelector('input[type=\"file\"]').files.length + \" Files\"\r\n                                }} type=\"file\" style={{ visibility: \"hidden\" }} name=\"getFile\" id=\"getFileInp\" placeholder=\"Select\" webkitdirectory=\"true\" multiple />\r\n                                : <input onChange={(e) => {\r\n                                    document.getElementsByClassName(\"fileNameShower\")[0].innerText = document.querySelector('input[type=\"file\"]').files[0].name\r\n                                }} type=\"file\" style={{ visibility: \"hidden\" }} name=\"getFile\" id=\"getFileInp\" placeholder=\"Select\" />\r\n                        }\r\n\r\n\r\n                        <div className=\"checkIsSetTopDataDiv\">\r\n                            <label htmlFor=\"isFolder\">Upload Folder<i style={{\r\n                                display: fileUploadStatus.isFolder === true ? \"inline-block\" : \"none\"\r\n                            }} className=\"fa fa-check\" id=\"checkBoxStatusShower\" aria-hidden=\"true\"></i></label>\r\n\r\n                            <input onChange={(e) => {\r\n                                document.getElementById(\"isFolder\").checked === true ?\r\n                                    dispatch({\r\n                                        type: \"setIsFolder\", payload: {\r\n                                            isFolder: true\r\n                                        }\r\n                                    }) :\r\n                                    dispatch({\r\n                                        type: \"setIsFolder\", payload: {\r\n                                            isFolder: false\r\n                                        }\r\n                                    })\r\n                            }} type=\"checkbox\" id=\"isFolder\" />\r\n                        </div>\r\n\r\n                        <div className=\"checkIsSetTopDataDiv\">\r\n                            <label htmlFor=\"isPrivate\">Is Private<i style={{\r\n                                display: fileUploadStatus.isPrivate === true ? \"inline-block\" : \"none\"\r\n                            }} className=\"fa fa-check\" id=\"checkBoxStatusShower\" aria-hidden=\"true\"></i></label>\r\n\r\n                            <input onChange={(e) => {\r\n                                document.getElementById(\"isPrivate\").checked === true ?\r\n                                    dispatch({\r\n                                        type: \"setIsPrivateFile\", payload: {\r\n                                            isPrivate: true\r\n                                        }\r\n                                    }) :\r\n                                    dispatch({\r\n                                        type: \"setIsPrivateFile\", payload: {\r\n                                            isPrivate: false\r\n                                        }\r\n                                    })\r\n                            }} type=\"checkbox\" id=\"isPrivate\" />\r\n                        </div>\r\n\r\n                        <button className=\"imageUploadSubmit\" onClick={() => storeData()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default UploadFile;","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Error404 from \"./Error404\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Loading from \"./Loading\";\r\nimport UploadFile from './Header/UploadFile';\r\nconst MainDashboardComponent = () => {\r\n    let { username } = useParams();\r\n    const dispatch = useDispatch();\r\n    const mainUserData = useSelector((state) => state.mainUserData.data);\r\n    const searchedUserData = useSelector((state) => state.searchedUserData.data);\r\n    const is404 = useSelector((state) => state.is404.data);\r\n    const usernameParameter = useSelector((state) => state.usernameParameter.data);\r\n    const isLoading = useSelector((state) => state.isLoading.data);\r\n    const isFileUpload = useSelector((state) => state.isFileUpload.data);\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                if (usernameParameter !== username) {\r\n                    dispatch({ type: \"setUsernameParameter\", payload: username });\r\n                }\r\n                if (mainUserData === null) {\r\n                    dispatch({ type: \"setIsLoading\", payload: true })\r\n                    let userData = await fetch(\"/getUserData\")\r\n                    let data = await userData.json();\r\n                    dispatch({ type: \"setMainUserData\", payload: data })\r\n                    dispatch({ type: \"setUsersData_PRIVATE\", payload: [{ path: \"/root\", data: data.data.privateFiles }] });\r\n                    dispatch({ type: \"setUsersData_PUBLIC\", payload: [{ path: \"/root\", data: data.data.publicFiles }] });\r\n                    dispatch({ type: \"setIsLoading\", payload: false })\r\n                } else if (mainUserData.isDone === false) {\r\n                    window.location.href = \"/auth/google\";\r\n                    // window.location.href = \"/auth/google\";\r\n                }\r\n                if (username !== undefined) {\r\n                    if (searchedUserData === null) {\r\n                        let userData = await fetch(\"/getSearchedUserData\", {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ email: username + \"@gmail.com\" })\r\n                        })\r\n                        let data = await userData.json();\r\n                        dispatch({ type: \"setSearchedUserData\", payload: data })\r\n                        dispatch({ type: \"setUsersData_PUBLIC\", payload: [{ path: \"/root\", data: data.data.publicFiles }] });\r\n                    } else if (searchedUserData.isDone === false && is404 === false) {\r\n                        dispatch({ type: \"setIs404\", payload: true });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        init();\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                username === undefined ?\r\n                    mainUserData !== null ? <Dashboard usersData={mainUserData} isMainUser={true} /> : <></>\r\n                    : searchedUserData !== null ? <Dashboard usersData={searchedUserData} isMainUser={false} /> : <></>\r\n            }\r\n            {\r\n                is404 === true ? <Error404 /> : <></>\r\n            }\r\n            {\r\n                isFileUpload === true ? <UploadFile /> : <></>\r\n            }\r\n            {\r\n                isLoading === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDashboardComponent;","export default __webpack_public_path__ + \"static/media/Logo.3a5dfd05.svg\";","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Logo from \"../../Logo.svg\";\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const mainUserData = useSelector((state) => state.mainUserData.data);\r\n    const usernameParameter = useSelector((state) => state.usernameParameter.data);\r\n    const history = useHistory();\r\n\r\n    const searchUser = async () => {\r\n        let userEmail = document.getElementsByClassName(\"searchDataInp\")[0].value.trim();\r\n        if (userEmail !== \"\") {\r\n            userEmail.substr(0, userEmail.indexOf(\"@\"));\r\n            userEmail = userEmail + \"@gmail.com\";\r\n            let userData = await fetch(\"/getSearchedUserData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: userEmail })\r\n            })\r\n            let data = await userData.json();\r\n            if (data.isDone === true) {\r\n                dispatch({ type: \"setSearchedUserData\", payload: null })\r\n                history.push(\"/\" + userEmail.substr(0, userEmail.indexOf(\"@\")))\r\n            } else {\r\n                alert(\"Your Not Exists\");\r\n            }\r\n        } else {\r\n            alert(\"Search Field Is Empty\");\r\n        }\r\n    }\r\n\r\n    const checkIsEnter = async (e) => {\r\n        if (e.key === \"Enter\") {\r\n            await searchUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"headerMain\">\r\n                {\r\n                    window.innerWidth > 490 ? <div onClick={() => {\r\n                        dispatch({ type: \"setMainUserData\", payload: null })\r\n                        history.push(\"/\")\r\n                    }} className=\"headingComponent\">\r\n                        <h1 className=\"heading\">\r\n                            VARt<span style={{ marginLeft: \"0.8rem\" }}>Block</span>\r\n                        </h1>\r\n                    </div> : <><img onClick={() => {\r\n                        dispatch({ type: \"setMainUserData\", payload: null })\r\n                        history.push(\"/\")\r\n                    }} className=\"svgLogoShower\" src={Logo} alt=\"\" /></>\r\n                }\r\n\r\n                <div className=\"subHeader\">\r\n                    <div className=\"searchBarComponent\">\r\n                        <div className=\"searchIcon\">\r\n                            <i className=\"fa fa-search\" aria-hidden=\"true\" onClick={() => searchUser()}></i>\r\n                        </div>\r\n                        <input type=\"text\" className=\"searchDataInp\" placeholder=\"Search By Email\" onKeyDown={(e) => checkIsEnter(e)} />\r\n                    </div>\r\n                    <div className=\"uploadAndUserDetails\">\r\n                        {\r\n                            mainUserData !== null && mainUserData.isDone !== false ?\r\n                                <>\r\n                                    <div onClick={() => {\r\n                                        dispatch({ type: \"setIsFileUpload\", payload: true })\r\n                                    }} className=\"uploadSVGImg\">\r\n                                        <svg\r\n                                            aria-label=\"New Post\" className=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M2 12v3.45c0 2.849.698 4.005 1.606 4.944.94.909 2.098 1.608 4.946 1.608h6.896c2.848 0 4.006-.7 4.946-1.608C21.302 19.455 22 18.3 22 15.45V8.552c0-2.849-.698-4.006-1.606-4.945C19.454 2.7 18.296 2 15.448 2H8.552c-2.848 0-4.006.699-4.946 1.607C2.698 4.547 2 5.703 2 8.552z\" fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"></path><line fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" x1=\"6.545\" x2=\"17.455\" y1=\"12.001\" y2=\"12.001\"></line><line fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" x1=\"12.003\" x2=\"12.003\" y1=\"6.545\" y2=\"17.455\"></line></svg>\r\n                                    </div>\r\n                                    <div onClick={() => {\r\n                                        dispatch({ type: \"setMainUserData\", payload: null })\r\n                                        history.push(\"/\")\r\n                                    }} className=\"userProfileImage\">\r\n                                        <img src={mainUserData.data.profileImage} alt=\"userImage\" />\r\n                                    </div>\r\n                                </>\r\n                                : usernameParameter !== undefined ?\r\n                                    <div className=\"userProfileImage\">\r\n                                        <Link to=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjzC2JyZDZ_RaWf0qp11K0lcvB6b6kYNMoqtZAQ9hiPZ4cTIOB\">\r\n                                            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjzC2JyZDZ_RaWf0qp11K0lcvB6b6kYNMoqtZAQ9hiPZ4cTIOB\" alt=\"userImage\" />\r\n                                        </Link>\r\n                                    </div> : <></>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Header; ","import React from 'react';\nimport MainDashboardComponent from \"./Components/MainDashboardComponent\"\nimport Header from \"./Components/Header/Header\";\nimport Error404 from \"./Components/Error404\";\nimport './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path='/:username?'>\n          {/* Use 'usePrams' Hook To Get Value Of Parameter, And Dont Try To Access Value Of Parameter In Any Other Component Except \"MainDashboardComponent\" And Its Child Components. */}\n          <MainDashboardComponent />\n        </Route>\n        {\n          window.location.pathname !== \"/auth/google\" ?\n            <Route>\n              <Error404 />\n            </Route> : <></>\n        }\n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n","import {\r\n    createReducer\r\n} from \"@reduxjs/toolkit\";\r\n\r\nexport const mainUserData = createReducer({\r\n    data: null\r\n}, {\r\n    setMainUserData: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const searchedUserData = createReducer({\r\n    data: null\r\n}, {\r\n    setSearchedUserData: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})","import {\r\n    createReducer\r\n} from \"@reduxjs/toolkit\";\r\n\r\nexport const is404 = createReducer({\r\n    data: false\r\n}, {\r\n    setIs404: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const usernameParameter = createReducer({\r\n    data: undefined\r\n}, {\r\n    setUsernameParameter: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const isLoading = createReducer({\r\n    data: false\r\n}, {\r\n    setIsLoading: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const usersData_PRIVATE = createReducer({\r\n    data: null\r\n}, {\r\n    setUsersData_PRIVATE: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const usersData_PUBLIC = createReducer({\r\n    data: null\r\n}, {\r\n    setUsersData_PUBLIC: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const isFileUpload = createReducer({\r\n    data: false\r\n}, {\r\n    setIsFileUpload: (state, action) => {\r\n        state.data = action.payload\r\n    }\r\n})\r\n\r\nexport const fileUploadStatus = createReducer({\r\n    isPrivate: false,\r\n    isFolder: false\r\n}, {\r\n    setIsPrivateFile: (state, action) => {\r\n        state.isPrivate = action.payload.isPrivate\r\n    },\r\n    setIsFolder: (state, action) => {\r\n        state.isFolder = action.payload.isFolder\r\n    }\r\n})","import {\r\n    configureStore\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n    mainUserData,\r\n    searchedUserData\r\n} from \"./Reducers/users\";\r\nimport {\r\n    is404,\r\n    usernameParameter,\r\n    isLoading,\r\n    usersData_PRIVATE,\r\n    usersData_PUBLIC,\r\n    isFileUpload,\r\n    fileUploadStatus\r\n} from \"./Reducers/tempStates\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        mainUserData: mainUserData,\r\n        searchedUserData: searchedUserData,\r\n        is404: is404,\r\n        usernameParameter: usernameParameter,\r\n        isLoading: isLoading,\r\n        usersData_PRIVATE: usersData_PRIVATE,\r\n        usersData_PUBLIC: usersData_PUBLIC,\r\n        isFileUpload: isFileUpload,\r\n        fileUploadStatus: fileUploadStatus\r\n    },\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\nimport {store} from \"./Redux/store\";\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <BrowserRouter>\n     <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}